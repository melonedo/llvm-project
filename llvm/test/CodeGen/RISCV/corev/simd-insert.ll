; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O0 -mtriple=riscv32 -mattr=+m -mattr=+xcvsimd -verify-machineinstrs < %s \
; RUN:   | FileCheck %s

; Extra tests for insert.b and insert.h

declare i32 @llvm.riscv.cv.simd.insert.b(i32, i32, i32)

define i32 @test.cv.insert.b0(i32 %a, i32 %b) {
; CHECK-LABEL: test.cv.insert.b0:
; CHECK:       # %bb.0:
; CHECK-NEXT:    cv.insert.b a0, a1, 0
; CHECK-NEXT:    ret
  %1 = call i32 @llvm.riscv.cv.simd.insert.b(i32 %a, i32 %b, i32 0)
  ret i32 %1
}

define i32 @test.cv.insert.b1(i32 %a, i32 %b) {
; CHECK-LABEL: test.cv.insert.b1:
; CHECK:       # %bb.0:
; CHECK-NEXT:    cv.insert.b a0, a1, 1
; CHECK-NEXT:    ret
  %1 = call i32 @llvm.riscv.cv.simd.insert.b(i32 %a, i32 %b, i32 1)
  ret i32 %1
}

define i32 @test.cv.insert.b(i32 %a, i32 %b, i32 %c, i32 %d) {
; CHECK-LABEL: test.cv.insert.b:
; CHECK:       # %bb.0:
; CHECK-NEXT:    mv a4, a0
; CHECK-NEXT:    # implicit-def: $x10
; CHECK-NEXT:    cv.insert.b a0, a4, 0
; CHECK-NEXT:    cv.insert.b a0, a1, 1
; CHECK-NEXT:    cv.insert.b a0, a2, 2
; CHECK-NEXT:    cv.insert.b a0, a3, 3
; CHECK-NEXT:    ret
  %1 = call i32 @llvm.riscv.cv.simd.insert.b(i32 undef, i32 %a, i32 0)
  %2 = call i32 @llvm.riscv.cv.simd.insert.b(i32 %1, i32 %b, i32 1)
  %3 = call i32 @llvm.riscv.cv.simd.insert.b(i32 %2, i32 %c, i32 2)
  %4 = call i32 @llvm.riscv.cv.simd.insert.b(i32 %3, i32 %d, i32 3)
  ret i32 %4
}

declare i32 @llvm.riscv.cv.simd.insert.h(i32, i32, i32)

define i32 @test.cv.insert.h0(i32 %a, i32 %b) {
; CHECK-LABEL: test.cv.insert.h0:
; CHECK:       # %bb.0:
; CHECK-NEXT:    cv.insert.h a0, a1, 0
; CHECK-NEXT:    ret
  %1 = call i32 @llvm.riscv.cv.simd.insert.h(i32 %a, i32 %b, i32 0)
  ret i32 %1
}

define i32 @test.cv.insert.h1(i32 %a, i32 %b) {
; CHECK-LABEL: test.cv.insert.h1:
; CHECK:       # %bb.0:
; CHECK-NEXT:    cv.insert.h a0, a1, 1
; CHECK-NEXT:    ret
  %1 = call i32 @llvm.riscv.cv.simd.insert.h(i32 %a, i32 %b, i32 1)
  ret i32 %1
}

define i32 @test.cv.insert.h(i32 %a, i32 %b) {
; CHECK-LABEL: test.cv.insert.h:
; CHECK:       # %bb.0:
; CHECK-NEXT:    mv a2, a0
; CHECK-NEXT:    # implicit-def: $x10
; CHECK-NEXT:    cv.insert.h a0, a2, 0
; CHECK-NEXT:    cv.insert.h a0, a1, 1
; CHECK-NEXT:    ret
  %1 = call i32 @llvm.riscv.cv.simd.insert.h(i32 undef, i32 %a, i32 0)
  %2 = call i32 @llvm.riscv.cv.simd.insert.h(i32 %1, i32 %b, i32 1)
  ret i32 %2
}
